import java.util.Scanner;

// Classe Produto
class Produto {
    private int codigo;
    private String nome;
    private String tamanhoPeso;
    private String cor;
    private double valor;
    private int quantidadeEmEstoque;

    // Construtor para inicializar o produto
    public Produto(int codigo, String nome, String tamanhoPeso, String cor, double valor, int quantidadeEmEstoque) {
        this.codigo = codigo;
        this.nome = nome;
        this.tamanhoPeso = tamanhoPeso;
        this.cor = cor;
        this.valor = valor;
        this.quantidadeEmEstoque = quantidadeEmEstoque;
    }

    // Getters e Setters
    public int getCodigo() {
        return codigo;
    }

    public String getNome() {
        return nome;
    }

    public String getTamanhoPeso() {
        return tamanhoPeso;
    }

    public String getCor() {
        return cor;
    }

    public double getValor() {
        return valor;
    }

    public int getQuantidadeEmEstoque() {
        return quantidadeEmEstoque;
    }

    public void setQuantidadeEmEstoque(int quantidadeEmEstoque) {
        this.quantidadeEmEstoque = quantidadeEmEstoque;
    }

    // Método para vender o produto
    public void venderProduto(int quantidade) {
        if (quantidade <= quantidadeEmEstoque) {
            quantidadeEmEstoque -= quantidade;
            System.out.println("Venda realizada com sucesso!");
        } else {
            System.out.println("Quantidade em estoque insuficiente!");
        }
    }
}

// Classe Pagamento
class Pagamento {
    // Método para calcular desconto
    public double calcularDesconto(double valorTotal, String formaPagamento) {
        double desconto = 0.0;
        if (formaPagamento.equalsIgnoreCase("Pix") || formaPagamento.equalsIgnoreCase("Espécie") ||
            formaPagamento.equalsIgnoreCase("Transferência") || formaPagamento.equalsIgnoreCase("Débito")) {
            desconto = valorTotal * 0.05;
        }
        return desconto;
    }

    // Método para pagamento em espécie, considerando troco
    public void pagarComEspecie(double valorProduto, double valorPago) {
        if (valorPago >= valorProduto) {
            double troco = valorPago - valorProduto;
            System.out.println("Troco: R$ " + troco);
        } else {
            System.out.println("Valor insuficiente para o pagamento.");
        }
    }

    // Método para pagamento no crédito com parcelamento
    public void pagarComCredito(double valorProduto, int parcelas) {
        if (parcelas == 3) {
            System.out.println("Pagamento realizado em 3x sem juros. Total: R$ " + valorProduto);
        } else {
            System.out.println("Parcelamento disponível apenas em 3x.");
        }
    }

    // Método para exibir o total a ser pago com desconto
    public double exibirTotalComDesconto(double valorProduto, String formaPagamento) {
        double desconto = calcularDesconto(valorProduto, formaPagamento);
        double totalComDesconto = valorProduto - desconto;
        System.out.println("Total com desconto: R$ " + totalComDesconto);
        return totalComDesconto;
    }
}

// Classe principal
public class SistemaControleProduto {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Produto produto = null;
        Pagamento pagamento = new Pagamento();

        // Cadastro do produto
        System.out.print("Digite o código do produto: ");
        int codigo = scanner.nextInt();
        scanner.nextLine(); // consumir o "\n" deixado pelo nextInt()
        System.out.print("Digite o nome do produto: ");
        String nome = scanner.nextLine();
        System.out.print("Digite o tamanho ou peso do produto: ");
        String tamanhoPeso = scanner.nextLine();
        System.out.print("Digite a cor do produto: ");
        String cor = scanner.nextLine();
        System.out.print("Digite o valor do produto: ");
        double valor = scanner.nextDouble();
        System.out.print("Digite a quantidade em estoque: ");
        int quantidade = scanner.nextInt();

        produto = new Produto(codigo, nome, tamanhoPeso, cor, valor, quantidade);

        // Exibindo as informações do produto
        System.out.println("\nProduto cadastrado com sucesso!");
        System.out.println("Código: " + produto.getCodigo());
        System.out.println("Nome: " + produto.getNome());
        System.out.println("Tamanho/Peso: " + produto.getTamanhoPeso());
        System.out.println("Cor: " + produto.getCor());
        System.out.println("Valor: R$ " + produto.getValor());
        System.out.println("Quantidade em estoque: " + produto.getQuantidadeEmEstoque());

        // Realizar venda
        System.out.print("\nDigite a quantidade que deseja vender: ");
        int quantidadeVenda = scanner.nextInt();
        produto.venderProduto(quantidadeVenda);

        // Processando pagamento
        System.out.println("\nEscolha a forma de pagamento:");
        System.out.println("1 - Pix");
        System.out.println("2 - Espécie");
        System.out.println("3 - Transferência");
        System.out.println("4 - Débito");
        System.out.println("5 - Crédito");

        int escolhaPagamento = scanner.nextInt();
        double valorTotal = produto.getValor() * quantidadeVenda;
        String formaPagamento = "";

        switch (escolhaPagamento) {
            case 1:
                formaPagamento = "Pix";
                break;
            case 2:
                formaPagamento = "Espécie";
                break;
            case 3:
                formaPagamento = "Transferência";
                break;
            case 4:
                formaPagamento = "Débito";
                break;
            case 5:
                formaPagamento = "Crédito";
                break;
            default:
                System.out.println("Opção de pagamento inválida!");
                return;
        }

        // Exibindo o valor com desconto
        double totalComDesconto = pagamento.exibirTotalComDesconto(valorTotal, formaPagamento);

        // Realizando o pagamento
        if (formaPagamento.equals("Espécie")) {
            System.out.print("\nDigite o valor pago: R$ ");
            double valorPago = scanner.nextDouble();
            pagamento.pagarComEspecie(totalComDesconto, valorPago);
        } else if (formaPagamento.equals("Crédito")) {
            System.out.print("\nDigite o número de parcelas (somente 3 parcelas sem juros): ");
            int parcelas = scanner.nextInt();
            pagamento.pagarComCredito(totalComDesconto, parcelas);
        } else {
            System.out.println("\nPagamento realizado via " + formaPagamento + ". Total: R$ " + totalComDesconto);
        }

        scanner.close();
    }
}
